# This is the build file for project "alphabet_position"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/local/bin/meson --internal regenerate /Users/alexdeeri/Projects/CLion/interview/alphabet_position /Users/alexdeeri/Projects/CLion/interview/alphabet_position/build
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build solution.bin.p/solution.c.o: c_COMPILER ../solution.c
 DEPFILE = solution.bin.p/solution.c.o.d
 DEPFILE_UNQUOTED = solution.bin.p/solution.c.o.d
 ARGS = -Isolution.bin.p -I. -I.. -I/usr/local/Cellar/criterion/2.4.1_2/include -I/usr/local/Cellar/libgit2/1.6.4/include -I/usr/local/Cellar/nanomsg/1.2/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX13.sdk/usr/include/ffi -I/usr/local/opt/libffi/include -fcolor-diagnostics -Wall -Winvalid-pch -O0 -g

build solution.bin.p/tests.c.o: c_COMPILER ../tests.c
 DEPFILE = solution.bin.p/tests.c.o.d
 DEPFILE_UNQUOTED = solution.bin.p/tests.c.o.d
 ARGS = -Isolution.bin.p -I. -I.. -I/usr/local/Cellar/criterion/2.4.1_2/include -I/usr/local/Cellar/libgit2/1.6.4/include -I/usr/local/Cellar/nanomsg/1.2/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX13.sdk/usr/include/ffi -I/usr/local/opt/libffi/include -fcolor-diagnostics -Wall -Winvalid-pch -O0 -g

build solution.bin: c_LINKER solution.bin.p/solution.c.o solution.bin.p/tests.c.o | /usr/local/Cellar/criterion/2.4.1_2/lib/libcriterion.dylib
 LINK_ARGS = -L/usr/local/opt/libffi/lib -I/usr/local/opt/libffi/include -Wl,-dead_strip_dylibs -Wl,-headerpad_max_install_names -Wl,-undefined,error -Wl,-rpath,/usr/local/Cellar/criterion/2.4.1_2/lib /usr/local/Cellar/criterion/2.4.1_2/lib/libcriterion.dylib

# Test rules

build test: phony meson-internal__test

build meson-internal__test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build benchmark: phony meson-internal__benchmark

build meson-internal__benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

# Install rules

build install: phony meson-internal__install

build meson-internal__install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/local/bin/meson install --no-rebuild
 pool = console

build dist: phony meson-internal__dist

build meson-internal__dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/local/bin/meson dist
 pool = console

# Suffix

build ctags: phony meson-internal__ctags

build meson-internal__ctags: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal tags ctags /Users/alexdeeri/Projects/CLion/interview/alphabet_position
 pool = console

build uninstall: phony meson-internal__uninstall

build meson-internal__uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal uninstall
 pool = console

build all: phony meson-test-prereq meson-benchmark-prereq solution.bin

build meson-test-prereq: phony solution.bin

build meson-benchmark-prereq: phony 

build clean: phony meson-internal__clean

build meson-internal__clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

